apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::$(AWS_ACCOUNT_ID):role/Mongodb-Backup-ServiceAccountRole-$(ENVIRONMENT)
  name: mongodb-backup-s3-sa
  namespace: default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-backup-pvc
  namespace: default
spec:
  resources:
    requests:
      storage: 50Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: gp3
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: db-backup
  namespace: default   # namespace where the cronjob will be deployed
spec:
  schedule: "0 10 * * mon-fri"
  timeZone: "Canada/Eastern"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          terminationGracePeriodSeconds: 120
          restartPolicy: Never
          imagePullSecrets:
            - name: docker-registry
          serviceAccountName: mongodb-backup-s3-sa

          # Volumes configuration referencing the claim
          volumes:
            - name: mongodb-data
              persistentVolumeClaim:
                claimName: mongodb-backup-pvc
          containers:
            - name: mongodb-backup
              image: flybits/mongodb-backup:c5f95a8
              command: ["/bin/bash", "-c", "sh ./backup.sh"]       #command to run when container starts
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - mountPath: /mongodb
                  name: mongodb-data
              env:
                  # Mongodb
                - name: MONGODB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: mongodb-backup-secrets
                      key: host
                - name: MONGODB_USER
                  valueFrom:
                    secretKeyRef:
                      name: mongodb-backup-secrets
                      key: user
                - name: MONGODB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mongodb-backup-secrets
                      key: password
                  # S3
                - name: S3_BUCKET
                  valueFrom:
                    secretKeyRef:
                      name: mongodb-backup-secrets
                      key: bucket
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
          nodeSelector:
            AppType: "essentials"
            topology.kubernetes.io/zone: us-east-1a # this is the AZ where the pod will be deployed
          tolerations:
          - key: "AppType"
            operator: "Equal"
            value: "essentials"
            effect: "NoExecute"